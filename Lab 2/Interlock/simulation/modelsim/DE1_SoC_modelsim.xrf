vendor_name = ModelSim
source_file = 1, C:/Users/codyohl/Documents/nightmares/Lab 2/Interlock/DE1_SoC.sdc
source_file = 1, C:/Users/codyohl/Documents/nightmares/Lab 2/Interlock/DE1_SoC.sv
source_file = 1, C:/Users/codyohl/Documents/nightmares/Lab 2/Interlock/Timer.sv
source_file = 1, C:/Users/codyohl/Documents/nightmares/Lab 2/Interlock/UserInput.v
source_file = 1, C:/Users/codyohl/Documents/nightmares/Lab 2/Interlock/enteringUranus.sv
source_file = 1, C:/Users/codyohl/Documents/nightmares/Lab 2/Interlock/leavingUranus.sv
source_file = 1, C:/Users/codyohl/Documents/nightmares/Lab 2/Interlock/flipflop.sv
source_file = 1, C:/Users/codyohl/Documents/nightmares/Lab 2/Interlock/db/DE1_SoC.cbx.xml
design_name = DE1_SoC
instance = comp, \HEX0[0]~output , HEX0[0]~output, DE1_SoC, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, DE1_SoC, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, DE1_SoC, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, DE1_SoC, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, DE1_SoC, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, DE1_SoC, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, DE1_SoC, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, DE1_SoC, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, DE1_SoC, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, DE1_SoC, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, DE1_SoC, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, DE1_SoC, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, DE1_SoC, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, DE1_SoC, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, DE1_SoC, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, DE1_SoC, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, DE1_SoC, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, DE1_SoC, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, DE1_SoC, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, DE1_SoC, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, DE1_SoC, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, DE1_SoC, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, DE1_SoC, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, DE1_SoC, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, DE1_SoC, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, DE1_SoC, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, DE1_SoC, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, DE1_SoC, 1
instance = comp, \HEX4[0]~output , HEX4[0]~output, DE1_SoC, 1
instance = comp, \HEX4[1]~output , HEX4[1]~output, DE1_SoC, 1
instance = comp, \HEX4[2]~output , HEX4[2]~output, DE1_SoC, 1
instance = comp, \HEX4[3]~output , HEX4[3]~output, DE1_SoC, 1
instance = comp, \HEX4[4]~output , HEX4[4]~output, DE1_SoC, 1
instance = comp, \HEX4[5]~output , HEX4[5]~output, DE1_SoC, 1
instance = comp, \HEX4[6]~output , HEX4[6]~output, DE1_SoC, 1
instance = comp, \HEX5[0]~output , HEX5[0]~output, DE1_SoC, 1
instance = comp, \HEX5[1]~output , HEX5[1]~output, DE1_SoC, 1
instance = comp, \HEX5[2]~output , HEX5[2]~output, DE1_SoC, 1
instance = comp, \HEX5[3]~output , HEX5[3]~output, DE1_SoC, 1
instance = comp, \HEX5[4]~output , HEX5[4]~output, DE1_SoC, 1
instance = comp, \HEX5[5]~output , HEX5[5]~output, DE1_SoC, 1
instance = comp, \HEX5[6]~output , HEX5[6]~output, DE1_SoC, 1
instance = comp, \LEDR[0]~output , LEDR[0]~output, DE1_SoC, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, DE1_SoC, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, DE1_SoC, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, DE1_SoC, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, DE1_SoC, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, DE1_SoC, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, DE1_SoC, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, DE1_SoC, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, DE1_SoC, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, DE1_SoC, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, DE1_SoC, 1
instance = comp, \CLOCK_50~inputCLKENA0 , CLOCK_50~inputCLKENA0, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[0]~0 , cdiv|divided_clocks[0]~0, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[0] , cdiv|divided_clocks[0], DE1_SoC, 1
instance = comp, \cdiv|Add0~21 , cdiv|Add0~21, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[1] , cdiv|divided_clocks[1], DE1_SoC, 1
instance = comp, \cdiv|Add0~17 , cdiv|Add0~17, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[2] , cdiv|divided_clocks[2], DE1_SoC, 1
instance = comp, \cdiv|Add0~13 , cdiv|Add0~13, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[3] , cdiv|divided_clocks[3], DE1_SoC, 1
instance = comp, \cdiv|Add0~9 , cdiv|Add0~9, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[4] , cdiv|divided_clocks[4], DE1_SoC, 1
instance = comp, \cdiv|Add0~5 , cdiv|Add0~5, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[5] , cdiv|divided_clocks[5], DE1_SoC, 1
instance = comp, \cdiv|Add0~1 , cdiv|Add0~1, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[6]~feeder , cdiv|divided_clocks[6]~feeder, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[6] , cdiv|divided_clocks[6], DE1_SoC, 1
instance = comp, \KEY[1]~input , KEY[1]~input, DE1_SoC, 1
instance = comp, \KEY[0]~input , KEY[0]~input, DE1_SoC, 1
instance = comp, \resetInput|prev , resetInput|prev, DE1_SoC, 1
instance = comp, \SW[2]~input , SW[2]~input, DE1_SoC, 1
instance = comp, \outPort|q~0 , outPort|q~0, DE1_SoC, 1
instance = comp, \outPort|q , outPort|q, DE1_SoC, 1
instance = comp, \pressurizeInput|prev~0 , pressurizeInput|prev~0, DE1_SoC, 1
instance = comp, \pressurizeInput|prev , pressurizeInput|prev, DE1_SoC, 1
instance = comp, \SW[1]~input , SW[1]~input, DE1_SoC, 1
instance = comp, \departing|q~0 , departing|q~0, DE1_SoC, 1
instance = comp, \departing|q , departing|q, DE1_SoC, 1
instance = comp, \SW[3]~input , SW[3]~input, DE1_SoC, 1
instance = comp, \inPort|q~0 , inPort|q~0, DE1_SoC, 1
instance = comp, \inPort|q , inPort|q, DE1_SoC, 1
instance = comp, \leavingInterlock|Selector8~0 , leavingInterlock|Selector8~0, DE1_SoC, 1
instance = comp, \SW[0]~input , SW[0]~input, DE1_SoC, 1
instance = comp, \arriving|q~0 , arriving|q~0, DE1_SoC, 1
instance = comp, \arriving|q , arriving|q, DE1_SoC, 1
instance = comp, \Equal2~0 , Equal2~0, DE1_SoC, 1
instance = comp, \enteringInterlock|ps~8 , enteringInterlock|ps~8, DE1_SoC, 1
instance = comp, \enteringInterlock|ps~9 , enteringInterlock|ps~9, DE1_SoC, 1
instance = comp, \enteringInterlock|ps~3 , enteringInterlock|ps~3, DE1_SoC, 1
instance = comp, \enteringInterlock|Selector1~0 , enteringInterlock|Selector1~0, DE1_SoC, 1
instance = comp, \KEY[2]~input , KEY[2]~input, DE1_SoC, 1
instance = comp, \evacuateInput|prev~0 , evacuateInput|prev~0, DE1_SoC, 1
instance = comp, \evacuateInput|prev , evacuateInput|prev, DE1_SoC, 1
instance = comp, \enteringInterlock|Selector3~0 , enteringInterlock|Selector3~0, DE1_SoC, 1
instance = comp, \leavingInterlock|ps.s2~0 , leavingInterlock|ps.s2~0, DE1_SoC, 1
instance = comp, \comb~2 , comb~2, DE1_SoC, 1
instance = comp, \secTimer|Add0~1 , secTimer|Add0~1, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed~3 , secTimer|secondsPassed~3, DE1_SoC, 1
instance = comp, \secTimer|Add1~21 , secTimer|Add1~21, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[0] , secTimer|clkCounter[0], DE1_SoC, 1
instance = comp, \secTimer|Add1~25 , secTimer|Add1~25, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[1]~feeder , secTimer|clkCounter[1]~feeder, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[1] , secTimer|clkCounter[1], DE1_SoC, 1
instance = comp, \secTimer|Add1~29 , secTimer|Add1~29, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[2]~feeder , secTimer|clkCounter[2]~feeder, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[2] , secTimer|clkCounter[2], DE1_SoC, 1
instance = comp, \secTimer|Add1~33 , secTimer|Add1~33, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[3] , secTimer|clkCounter[3], DE1_SoC, 1
instance = comp, \secTimer|Add1~9 , secTimer|Add1~9, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[4] , secTimer|clkCounter[4], DE1_SoC, 1
instance = comp, \secTimer|Add1~37 , secTimer|Add1~37, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[5] , secTimer|clkCounter[5], DE1_SoC, 1
instance = comp, \secTimer|Add1~41 , secTimer|Add1~41, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[6] , secTimer|clkCounter[6], DE1_SoC, 1
instance = comp, \secTimer|Add1~45 , secTimer|Add1~45, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[7]~feeder , secTimer|clkCounter[7]~feeder, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[7] , secTimer|clkCounter[7], DE1_SoC, 1
instance = comp, \secTimer|Add1~49 , secTimer|Add1~49, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[8] , secTimer|clkCounter[8], DE1_SoC, 1
instance = comp, \secTimer|Add1~53 , secTimer|Add1~53, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[9] , secTimer|clkCounter[9], DE1_SoC, 1
instance = comp, \secTimer|Add1~1 , secTimer|Add1~1, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[10] , secTimer|clkCounter[10], DE1_SoC, 1
instance = comp, \secTimer|Add1~57 , secTimer|Add1~57, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[11]~feeder , secTimer|clkCounter[11]~feeder, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[11] , secTimer|clkCounter[11], DE1_SoC, 1
instance = comp, \secTimer|Add1~61 , secTimer|Add1~61, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[12] , secTimer|clkCounter[12], DE1_SoC, 1
instance = comp, \secTimer|Add1~17 , secTimer|Add1~17, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[13] , secTimer|clkCounter[13], DE1_SoC, 1
instance = comp, \secTimer|Add1~65 , secTimer|Add1~65, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[14]~feeder , secTimer|clkCounter[14]~feeder, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[14] , secTimer|clkCounter[14], DE1_SoC, 1
instance = comp, \secTimer|Add1~69 , secTimer|Add1~69, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[15]~feeder , secTimer|clkCounter[15]~feeder, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[15] , secTimer|clkCounter[15], DE1_SoC, 1
instance = comp, \secTimer|Add1~73 , secTimer|Add1~73, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[16] , secTimer|clkCounter[16], DE1_SoC, 1
instance = comp, \secTimer|Equal0~2 , secTimer|Equal0~2, DE1_SoC, 1
instance = comp, \secTimer|Add1~5 , secTimer|Add1~5, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[17]~feeder , secTimer|clkCounter[17]~feeder, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[17] , secTimer|clkCounter[17], DE1_SoC, 1
instance = comp, \secTimer|Add1~13 , secTimer|Add1~13, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[18]~feeder , secTimer|clkCounter[18]~feeder, DE1_SoC, 1
instance = comp, \secTimer|clkCounter[18] , secTimer|clkCounter[18], DE1_SoC, 1
instance = comp, \secTimer|Equal0~0 , secTimer|Equal0~0, DE1_SoC, 1
instance = comp, \secTimer|Equal0~1 , secTimer|Equal0~1, DE1_SoC, 1
instance = comp, \secTimer|Equal0~3 , secTimer|Equal0~3, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed[3]~1 , secTimer|secondsPassed[3]~1, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed[2] , secTimer|secondsPassed[2], DE1_SoC, 1
instance = comp, \secTimer|Add0~2 , secTimer|Add0~2, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed~4 , secTimer|secondsPassed~4, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed[3] , secTimer|secondsPassed[3], DE1_SoC, 1
instance = comp, \enteringInterlock|ps~10 , enteringInterlock|ps~10, DE1_SoC, 1
instance = comp, \enteringInterlock|ps.evacTiming~0 , enteringInterlock|ps.evacTiming~0, DE1_SoC, 1
instance = comp, \enteringInterlock|ps~11 , enteringInterlock|ps~11, DE1_SoC, 1
instance = comp, \enteringInterlock|ps~4 , enteringInterlock|ps~4, DE1_SoC, 1
instance = comp, \enteringInterlock|Selector5~0 , enteringInterlock|Selector5~0, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed~0 , secTimer|secondsPassed~0, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed[0] , secTimer|secondsPassed[0], DE1_SoC, 1
instance = comp, \Equal0~0 , Equal0~0, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~5 , leavingInterlock|ps~5, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~4 , leavingInterlock|ps~4, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~6 , leavingInterlock|ps~6, DE1_SoC, 1
instance = comp, \enteringInterlock|Selector5~1 , enteringInterlock|Selector5~1, DE1_SoC, 1
instance = comp, \leavingInterlock|Selector7~0 , leavingInterlock|Selector7~0, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~8 , leavingInterlock|ps~8, DE1_SoC, 1
instance = comp, \resetInput|pressed , resetInput|pressed, DE1_SoC, 1
instance = comp, \leavingInterlock|Selector0~1 , leavingInterlock|Selector0~1, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~9 , leavingInterlock|ps~9, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~3 , leavingInterlock|ps~3, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~10 , leavingInterlock|ps~10, DE1_SoC, 1
instance = comp, \leavingInterlock|Selector0~0 , leavingInterlock|Selector0~0, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~7 , leavingInterlock|ps~7, DE1_SoC, 1
instance = comp, \leavingInterlock|ps~2 , leavingInterlock|ps~2, DE1_SoC, 1
instance = comp, \leavingInterlock|ps.s6~0 , leavingInterlock|ps.s6~0, DE1_SoC, 1
instance = comp, \comb~0 , comb~0, DE1_SoC, 1
instance = comp, \comb~1 , comb~1, DE1_SoC, 1
instance = comp, \secTimer|Add0~0 , secTimer|Add0~0, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed~2 , secTimer|secondsPassed~2, DE1_SoC, 1
instance = comp, \secTimer|secondsPassed[1] , secTimer|secondsPassed[1], DE1_SoC, 1
instance = comp, \enteringInterlock|ps~6 , enteringInterlock|ps~6, DE1_SoC, 1
instance = comp, \enteringInterlock|ps~7 , enteringInterlock|ps~7, DE1_SoC, 1
instance = comp, \enteringInterlock|ps~2 , enteringInterlock|ps~2, DE1_SoC, 1
instance = comp, \enteringInterlock|display~1 , enteringInterlock|display~1, DE1_SoC, 1
instance = comp, \enteringInterlock|ps.arriveTiming~0 , enteringInterlock|ps.arriveTiming~0, DE1_SoC, 1
instance = comp, \KEY[3]~input , KEY[3]~input, DE1_SoC, 1
instance = comp, \SW[4]~input , SW[4]~input, DE1_SoC, 1
instance = comp, \SW[5]~input , SW[5]~input, DE1_SoC, 1
instance = comp, \SW[6]~input , SW[6]~input, DE1_SoC, 1
instance = comp, \SW[7]~input , SW[7]~input, DE1_SoC, 1
instance = comp, \SW[8]~input , SW[8]~input, DE1_SoC, 1
instance = comp, \SW[9]~input , SW[9]~input, DE1_SoC, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, DE1_SoC, 1
