--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:06:17:18:06:03:SJ cbx_lpm_add_sub 2014:06:17:18:06:03:SJ cbx_lpm_compare 2014:06:17:18:06:03:SJ cbx_lpm_decode 2014:06:17:18:06:03:SJ cbx_mgl 2014:06:17:18:10:38:SJ cbx_stratix 2014:06:17:18:06:03:SJ cbx_stratixii 2014:06:17:18:06:03:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_tma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode3041w[1..0]	: WIRE;
	w_anode3050w[3..0]	: WIRE;
	w_anode3067w[3..0]	: WIRE;
	w_anode3077w[3..0]	: WIRE;
	w_anode3087w[3..0]	: WIRE;
	w_anode3097w[3..0]	: WIRE;
	w_anode3107w[3..0]	: WIRE;
	w_anode3117w[3..0]	: WIRE;
	w_anode3127w[3..0]	: WIRE;
	w_anode3139w[1..0]	: WIRE;
	w_anode3146w[3..0]	: WIRE;
	w_anode3157w[3..0]	: WIRE;
	w_anode3167w[3..0]	: WIRE;
	w_anode3177w[3..0]	: WIRE;
	w_anode3187w[3..0]	: WIRE;
	w_anode3197w[3..0]	: WIRE;
	w_anode3207w[3..0]	: WIRE;
	w_anode3217w[3..0]	: WIRE;
	w_data3039w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode3217w[3..3], w_anode3207w[3..3], w_anode3197w[3..3], w_anode3187w[3..3], w_anode3177w[3..3], w_anode3167w[3..3], w_anode3157w[3..3], w_anode3146w[3..3]), ( w_anode3127w[3..3], w_anode3117w[3..3], w_anode3107w[3..3], w_anode3097w[3..3], w_anode3087w[3..3], w_anode3077w[3..3], w_anode3067w[3..3], w_anode3050w[3..3]));
	w_anode3041w[] = ( (w_anode3041w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3050w[] = ( (w_anode3050w[2..2] & (! w_data3039w[2..2])), (w_anode3050w[1..1] & (! w_data3039w[1..1])), (w_anode3050w[0..0] & (! w_data3039w[0..0])), w_anode3041w[1..1]);
	w_anode3067w[] = ( (w_anode3067w[2..2] & (! w_data3039w[2..2])), (w_anode3067w[1..1] & (! w_data3039w[1..1])), (w_anode3067w[0..0] & w_data3039w[0..0]), w_anode3041w[1..1]);
	w_anode3077w[] = ( (w_anode3077w[2..2] & (! w_data3039w[2..2])), (w_anode3077w[1..1] & w_data3039w[1..1]), (w_anode3077w[0..0] & (! w_data3039w[0..0])), w_anode3041w[1..1]);
	w_anode3087w[] = ( (w_anode3087w[2..2] & (! w_data3039w[2..2])), (w_anode3087w[1..1] & w_data3039w[1..1]), (w_anode3087w[0..0] & w_data3039w[0..0]), w_anode3041w[1..1]);
	w_anode3097w[] = ( (w_anode3097w[2..2] & w_data3039w[2..2]), (w_anode3097w[1..1] & (! w_data3039w[1..1])), (w_anode3097w[0..0] & (! w_data3039w[0..0])), w_anode3041w[1..1]);
	w_anode3107w[] = ( (w_anode3107w[2..2] & w_data3039w[2..2]), (w_anode3107w[1..1] & (! w_data3039w[1..1])), (w_anode3107w[0..0] & w_data3039w[0..0]), w_anode3041w[1..1]);
	w_anode3117w[] = ( (w_anode3117w[2..2] & w_data3039w[2..2]), (w_anode3117w[1..1] & w_data3039w[1..1]), (w_anode3117w[0..0] & (! w_data3039w[0..0])), w_anode3041w[1..1]);
	w_anode3127w[] = ( (w_anode3127w[2..2] & w_data3039w[2..2]), (w_anode3127w[1..1] & w_data3039w[1..1]), (w_anode3127w[0..0] & w_data3039w[0..0]), w_anode3041w[1..1]);
	w_anode3139w[] = ( (w_anode3139w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3146w[] = ( (w_anode3146w[2..2] & (! w_data3039w[2..2])), (w_anode3146w[1..1] & (! w_data3039w[1..1])), (w_anode3146w[0..0] & (! w_data3039w[0..0])), w_anode3139w[1..1]);
	w_anode3157w[] = ( (w_anode3157w[2..2] & (! w_data3039w[2..2])), (w_anode3157w[1..1] & (! w_data3039w[1..1])), (w_anode3157w[0..0] & w_data3039w[0..0]), w_anode3139w[1..1]);
	w_anode3167w[] = ( (w_anode3167w[2..2] & (! w_data3039w[2..2])), (w_anode3167w[1..1] & w_data3039w[1..1]), (w_anode3167w[0..0] & (! w_data3039w[0..0])), w_anode3139w[1..1]);
	w_anode3177w[] = ( (w_anode3177w[2..2] & (! w_data3039w[2..2])), (w_anode3177w[1..1] & w_data3039w[1..1]), (w_anode3177w[0..0] & w_data3039w[0..0]), w_anode3139w[1..1]);
	w_anode3187w[] = ( (w_anode3187w[2..2] & w_data3039w[2..2]), (w_anode3187w[1..1] & (! w_data3039w[1..1])), (w_anode3187w[0..0] & (! w_data3039w[0..0])), w_anode3139w[1..1]);
	w_anode3197w[] = ( (w_anode3197w[2..2] & w_data3039w[2..2]), (w_anode3197w[1..1] & (! w_data3039w[1..1])), (w_anode3197w[0..0] & w_data3039w[0..0]), w_anode3139w[1..1]);
	w_anode3207w[] = ( (w_anode3207w[2..2] & w_data3039w[2..2]), (w_anode3207w[1..1] & w_data3039w[1..1]), (w_anode3207w[0..0] & (! w_data3039w[0..0])), w_anode3139w[1..1]);
	w_anode3217w[] = ( (w_anode3217w[2..2] & w_data3039w[2..2]), (w_anode3217w[1..1] & w_data3039w[1..1]), (w_anode3217w[0..0] & w_data3039w[0..0]), w_anode3139w[1..1]);
	w_data3039w[2..0] = data_wire[2..0];
END;
--VALID FILE
